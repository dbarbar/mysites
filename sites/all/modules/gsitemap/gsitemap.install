<?php
// $Id: gsitemap.install,v 1.4.2.18 2007/05/08 14:54:25 darrenoh Exp $

/**
 * Implementation of hook_install().
 */
function gsitemap_install() {
  switch ($GLOBALS['db_type']) {
    case 'mysql':
    case 'mysqli':
      db_query("CREATE TABLE {gsitemap} (
        nid int,
        pid int,
        last_changed int(11),
        previously_changed int(11),
        last_comment int(11),
        previous_comment int(11),
        priority_override decimal(2,1),
        PRIMARY KEY (nid)
      ) /*!40100 DEFAULT CHARACTER SET utf8 */;");
      db_query("CREATE TABLE {gsitemap_additional} (
        path varchar(128) NOT NULL default '',
        pid int,
        last_changed int(11),
        previously_changed int(11),
        priority decimal(2,1),
        PRIMARY KEY (path)
      ) /*!40100 DEFAULT CHARACTER SET utf8 */;");
      break;
    case 'pgsql':
      db_query("CREATE TABLE {gsitemap} (
        nid integer,
        pid integer,
        last_changed integer,
        previously_changed integer,
        last_comment integer,
        previous_comment integer,
        priority_override real,
        PRIMARY KEY (nid)
      );");
      db_query("CREATE TABLE {gsitemap_additional} (
        path varchar(128) NOT NULL default '',
        pid integer,
        last_changed integer,
        previously_changed integer,
        priority real,
        PRIMARY KEY (path)
      );");
      break;
  }
}

/**
 * Implementation of hook_uninstall().
 */
function gsitemap_uninstall() {
  db_query('DROP TABLE {gsitemap}');
  db_query('DROP TABLE {gsitemap_additional}');
  variable_del('gsitemap_ask_com_submit');
  variable_del('gsitemap_ask_com_url');
  variable_del('gsitemap_changed');
  variable_del('gsitemap_chunk_size');
  variable_del('gsitemap_chunk_count');
  variable_del('gsitemap_commentwt');
  variable_del('gsitemap_countcom');
  variable_del('gsitemap_cron_submit');
  variable_del('gsitemap_frontpage');
  variable_del('gsitemap_google_submit');
  variable_del('gsitemap_google_url');
  variable_del('gsitemap_logacc');
  variable_del('gsitemap_priority');
  variable_del('gsitemap_promotewt');
  variable_del('gsitemap_showterms');
  variable_del('gsitemap_showusers');
  variable_del('gsitemap_submit');
  variable_del('gsitemap_update');
  variable_del('gsitemap_verify');
  variable_del('gsitemap_yahoo_submit');
  variable_del('gsitemap_yahoo_url');
  foreach (node_get_types('names') as $type => $name) {
    variable_del('gsitemap_'. $type .'wt');
  }
}

/**
 * Implementation of hook_update_N().
 */
function gsitemap_update_1() {
  return _system_update_utf8(array('gsitemap'));
}

function gsitemap_update_2() {
  $ret = array();
  switch ($GLOBALS['db_type']) {
    case 'mysql':
    case 'mysqli':
      $ret[] = update_sql("CREATE TABLE {gsitemap_additional} (
        url varchar(128) NOT NULL default '',
        last_changed int(11),
        previously_changed int(11),
        priority decimal(2,1),
        PRIMARY KEY (url)
      ) /*!40100 DEFAULT CHARACTER SET utf8 */;");
      break;
    case 'pgsql':
      $ret[] = update_sql("CREATE TABLE {gsitemap_additional} (
        url varchar(128) NOT NULL default '',
        last_changed integer,
        previously_changed integer,
        priority real,
        PRIMARY KEY (url)
      );");
      break;
  }
  return $ret;
}

function gsitemap_update_3() {
  variable_del('gsitemap_google_url');
  variable_del('gsitemap_yahoo_url');
  variable_del('gsitemap_ask.com_url');
  variable_del('gsitemap_ask.com_submit');
  return array();
}

function gsitemap_update_4() {
  $ret = array();
  switch ($GLOBALS['db_type']) {
    case 'mysql':
    case 'mysqli':
      $ret[] = update_sql("ALTER TABLE {gsitemap_additional} CHANGE url path varchar(128) NOT NULL default ''");
      $ret[] = update_sql('ALTER TABLE {gsitemap_additional} ADD pid int');
      $ret[] = update_sql('ALTER TABLE {gsitemap} ADD pid int');
      break;
    case 'pgsql':
      db_change_column($ret, 'gsitemap_additional', 'url', 'path', 'varchar(128)', array('not null' => TRUE, 'default' => "''"));
      db_add_column($ret, 'gsitemap_additional', 'pid', 'integer');
      db_add_column($ret, 'gsitemap', 'pid', 'integer');
      break;
  }
  $result = db_query('SELECT nid FROM {gsitemap}');
  while ($node = db_fetch_object($result)) {
    $pid = db_result(db_query("SELECT pid FROM {url_alias} WHERE src = '%s'", 'node/'. $node->nid));
    db_query('UPDATE {gsitemap} SET pid = %d WHERE nid = %d', $pid, $node->nid);
  }
  _gsitemap_update_cache();
  menu_rebuild();
  return $ret;
}

function gsitemap_update_5() {
  $ret = array();
  $urls['gsitemap_ask_com_url'] = variable_get('gsitemap_ask_com_url', 'http://submissions.ask.com/ping?sitemap='. url('sitemap.xml', NULL, NULL, TRUE));
  $urls['gsitemap_google_url'] = variable_get('gsitemap_google_url', 'http://www.google.com/webmasters/tools/ping?sitemap='. url('sitemap.xml', NULL, NULL, TRUE));
  $urls['gsitemap_yahoo_url'] = variable_get('gsitemap_yahoo_url', 'http://search.yahooapis.com/SiteExplorerService/V1/ping?sitemap='. url('sitemap.xml', NULL, NULL, TRUE));
  foreach ($urls as $search_engine => $url) {
    if ($gsitemap = strpos($url, 'gsitemap')) {
      variable_set($search_engine, substr_replace($url, 'sitemap.xml', $gsitemap));
    }
  }
  return $ret;
}

